<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.project.easyTeaching.dao.VoteMapper">
  <resultMap id="BaseResultMap" type="team.project.easyTeaching.pojo.Vote">
    <constructor>
      <idArg column="vote_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="vote_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creator_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="class_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updatetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    vote_id, vote_name, creator_id, course_id, class_id, create_time, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_vote
    where vote_id = #{voteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_vote
    where vote_id = #{voteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.project.easyTeaching.pojo.Vote">
    insert into tb_vote (vote_id, vote_name, creator_id, 
      course_id, class_id, create_time, 
      updatetime)
    values (#{voteId,jdbcType=INTEGER}, #{voteName,jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="team.project.easyTeaching.pojo.Vote">
    insert into tb_vote
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        vote_id,
      </if>
      <if test="voteName != null">
        vote_name,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="voteName != null">
        #{voteName,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="team.project.easyTeaching.pojo.Vote">
    update tb_vote
    <set>
      <if test="voteName != null">
        vote_name = #{voteName,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where vote_id = #{voteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.project.easyTeaching.pojo.Vote">
    update tb_vote
    set vote_name = #{voteName,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where vote_id = #{voteId,jdbcType=INTEGER}
  </update>
</mapper>